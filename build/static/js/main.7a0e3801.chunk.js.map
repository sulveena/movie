{"version":3,"sources":["components/movie_details/movie_details.js","components/spinner/spinner.js","components/movie_list/movie_list.js","components/search/search.js","App.js","serviceWorker.js","index.js"],"names":["TextTitle","Typography","Title","MovieDetails","Poster","imdbRating","Rated","Runtime","Genre","Plot","span","src","alt","level","style","textAlign","color","marginBottom","Spinner","className","Meta","Card","MovieList","imdbID","useState","activateModal","setMovieDetailModal","detail","setShowMovieDetail","detailRequest","setDetailRequest","margin","width","cover","height","onClick","fetch","then","resp","json","response","catch","message","title","description","centered","visible","onCancel","footer","Search","Input","SearchBox","error","setError","loading","setLoading","searchTerm","setSearchTerm","data","setData","useEffect","Response","Error","offset","placeholder","enterButton","size","onSearch","value","gutter","type","justify","length","map","result","index","key","Header","Layout","Content","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.7a0e3801.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Row, Col, Tag, Typography } from \"antd\";\r\nconst TextTitle = Typography.Title;\r\nconst MovieDetails = ({\r\n  Title,\r\n  Poster,\r\n  imdbRating,\r\n  Rated,\r\n  Runtime,\r\n  Genre,\r\n  Plot,\r\n}) => {\r\n  return (\r\n    <Row>\r\n      <Col span={11}>\r\n        <img\r\n          src={\r\n            Poster === \"N/A\"\r\n              ? \"https://placehold.it/198x264&text=Image+Not+Found\"\r\n              : Poster\r\n          }\r\n          alt={Title}\r\n        />\r\n      </Col>\r\n      <Col span={13}>\r\n        <Row>\r\n          <Col span={21}>\r\n            <TextTitle level={4}>{Title}</TextTitle>\r\n          </Col>\r\n          <Col span={3} style={{ textAlign: \"right\" }}>\r\n            <TextTitle level={4}>\r\n              <span style={{ color: \"#41A8F8\" }}>{imdbRating}</span>\r\n            </TextTitle>\r\n          </Col>\r\n        </Row>\r\n        <Row style={{ marginBottom: \"20px\" }}>\r\n          <Col>\r\n            <Tag>{Rated}</Tag>\r\n            <Tag>{Runtime}</Tag>\r\n            <Tag>{Genre}</Tag>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>{Plot}</Col>\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n","import React from \"react\";\r\nimport { Spin } from \"antd\";\r\nimport \"./spinner.css\";\r\nimport \"antd/dist/antd.css\";\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"spinnerClass\">\r\n      <Spin />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useState, useReducer } from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport { Col, Card } from \"antd\";\r\nimport MovieDetails from \"../movie_details/movie_details\";\r\nimport Spinner from \"../spinner/spinner\";\r\nconst { Meta } = Card;\r\nconst API_KEY = \"b9bd48a6\";\r\nconst MovieList = ({ Title, imdbID, Poster }) => {\r\n  const [activateModal, setMovieDetailModal] = useState(false);\r\n  const [detail, setShowMovieDetail] = useState(false);\r\n  const [detailRequest, setDetailRequest] = useState(false);\r\n\r\n  const fetchMovieDetails = () => {\r\n    setMovieDetailModal(true);\r\n    setDetailRequest(true);\r\n\r\n    fetch(`http://www.omdbapi.com/?i=${imdbID}&apikey=${API_KEY}`)\r\n      .then((resp) => resp)\r\n      .then((resp) => resp.json())\r\n      .then((response) => {\r\n        setDetailRequest(false);\r\n        setShowMovieDetail(response);\r\n      })\r\n      .catch(({ message }) => {\r\n        setDetailRequest(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Col style={{ margin: \"20px 0\" }} className=\"gutter-row\">\r\n      <div className=\"gutter-box\">\r\n        <Card\r\n          style={{ width: 200 }}\r\n          cover={\r\n            <img\r\n              style={{ height: 250 }}\r\n              alt={Title}\r\n              src={\r\n                Poster === \"N/A\"\r\n                  ? \"https://placehold.it/198x264&text=Image+Not+Found\"\r\n                  : Poster\r\n              }\r\n            />\r\n          }\r\n          onClick={() => fetchMovieDetails()}\r\n        >\r\n          <Meta title={Title} description={false} />\r\n        </Card>\r\n        <Modal\r\n          title=\"Movie Details\"\r\n          centered\r\n          visible={activateModal}\r\n          onCancel={() => setMovieDetailModal(false)}\r\n          footer={null}\r\n          width={800}\r\n        >\r\n          {detailRequest === false ? <MovieDetails {...detail} /> : <Spinner />}\r\n        </Modal>\r\n      </div>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, Input, Alert } from \"antd\";\r\n// import Suggestions from \"./suggestion\";\r\nimport MovieList from \"../movie_list/movie_list\";\r\nimport \"./search.css\";\r\nimport Spinner from \"../spinner/spinner\";\r\nconst { Search } = Input;\r\nconst API_KEY = \"b9bd48a6\";\r\nconst SearchBox = () => {\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState(\"Marvel\");\r\n  const [data, setData] = useState(null);\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setError(null);\r\n    setData(null);\r\n\r\n    fetch(\r\n      `http://www.omdbapi.com/?s=${searchTerm}&apikey=${API_KEY}&page[limit]`\r\n    )\r\n      .then((resp) => resp)\r\n      .then((resp) => resp.json())\r\n      .then((response) => {\r\n        if (response.Response === \"False\") {\r\n          setError(response.Error);\r\n        } else {\r\n          setData(response.Search);\r\n        }\r\n\r\n        setLoading(false);\r\n      })\r\n      .catch(({ message }) => {\r\n        setError(message);\r\n        setLoading(false);\r\n      });\r\n  }, [searchTerm]);\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col span={12} offset={6}>\r\n          <Search\r\n            placeholder=\"Enter a movie name\"\r\n            enterButton=\"Search\"\r\n            size=\"large\"\r\n            onSearch={(value) => setSearchTerm(value)}\r\n          />\r\n          {/* <Suggestions results={data} /> */}\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={16} type=\"flex\" justify=\"center\">\r\n        {loading && <Spinner />}\r\n        {error !== null && (\r\n          <div className=\"errorBody\">\r\n            <Alert message={error} type=\"error\" />\r\n          </div>\r\n        )}\r\n\r\n        {data !== null &&\r\n          data.length > 0 &&\r\n          data.map((result, index) => <MovieList key={index} {...result} />)}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport SearchBox from \"./components/search/search\";\nimport { Layout, Typography } from \"antd\";\nimport \"antd/dist/antd.css\";\nconst { Header, Content, Footer } = Layout;\nconst TextTitle = Typography.Title;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout className=\"layout\">\n        <Header>\n          <div style={{ textAlign: \"center\" }}>\n            <TextTitle className=\"headerTitle\">Movie Database</TextTitle>\n          </div>\n        </Header>\n        <Content className=\"contentStyle\">\n          <div className=\"contentBody\">\n            <SearchBox />\n          </div>\n        </Content>\n        <Footer className=\"footer\">Copyright Information @2020</Footer>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}